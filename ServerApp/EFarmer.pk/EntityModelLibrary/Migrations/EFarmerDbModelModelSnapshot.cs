// <auto-generated />
using System;
using EFarmerPkModelLibrary.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFarmerPkModelLibrary.Migrations
{
    [DbContext(typeof(EFarmerDbModel))]
    partial class EFarmerDbModelModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFarmerPkModelLibrary.Entities.ADVERTISEMENT", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("CityId")
                        .HasColumnName("CityId")
                        .HasColumnType("smallint");

                    b.Property<int>("ItemId")
                        .HasColumnName("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnName("Picture")
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("PostedDateTime")
                        .HasColumnName("PostedDateTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Price")
                        .HasColumnName("Price")
                        .HasColumnType("money");

                    b.Property<short>("Quality")
                        .HasColumnName("Quality")
                        .HasColumnType("smallint");

                    b.Property<short>("Quantity")
                        .HasColumnName("Quantity")
                        .HasColumnType("smallint");

                    b.Property<long>("SellerId")
                        .HasColumnName("SellerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("ItemId");

                    b.HasIndex("SellerId");

                    b.ToTable("ADVERTISEMENTS","dbo");
                });

            modelBuilder.Entity("EFarmerPkModelLibrary.Entities.AGROITEM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("CategoryId")
                        .HasColumnName("CategoryId")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UWeightScale")
                        .HasColumnName("UWeightScale")
                        .HasColumnType("nchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Uname")
                        .HasColumnName("Uname")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("WeightScale")
                        .IsRequired()
                        .HasColumnName("WeightScale")
                        .HasColumnType("nchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("AGRO_ITEMS","dbo");
                });

            modelBuilder.Entity("EFarmerPkModelLibrary.Entities.BUYERADDSDIFFERENTADSTOFAV", b =>
                {
                    b.Property<long>("BuyerId")
                        .HasColumnName("BuyerId")
                        .HasColumnType("bigint");

                    b.Property<long>("AdId")
                        .HasColumnName("AdId")
                        .HasColumnType("bigint");

                    b.HasKey("BuyerId", "AdId");

                    b.HasIndex("AdId");

                    b.ToTable("BUYER_ADDS_DIFFERENT_ADS_TO_FAV","dbo");
                });

            modelBuilder.Entity("EFarmerPkModelLibrary.Entities.BUYERSADDAGROITEMTOINTEREST", b =>
                {
                    b.Property<long>("BuyerId")
                        .HasColumnName("BuyerId")
                        .HasColumnType("bigint");

                    b.Property<int>("ItemId")
                        .HasColumnName("ItemId")
                        .HasColumnType("int");

                    b.HasKey("BuyerId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("BUYERS_ADD_AGRO_ITEM_TO_INTEREST","dbo");
                });

            modelBuilder.Entity("EFarmerPkModelLibrary.Entities.CATEGORY", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UName")
                        .HasColumnName("UName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("CATEGORIES","dbo");
                });

            modelBuilder.Entity("EFarmerPkModelLibrary.Entities.CITY", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("GLat")
                        .HasColumnName("GLat")
                        .HasColumnType("decimal(10,8)");

                    b.Property<decimal>("GLng")
                        .HasColumnName("GLng")
                        .HasColumnType("decimal(11,8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("CITIES","dbo");
                });

            modelBuilder.Entity("EFarmerPkModelLibrary.Entities.SELLERSFAVORITESBUYER", b =>
                {
                    b.Property<long>("SellerId")
                        .HasColumnName("SellerId")
                        .HasColumnType("bigint");

                    b.Property<long>("BuyerId")
                        .HasColumnName("BuyerId")
                        .HasColumnType("bigint");

                    b.HasKey("SellerId", "BuyerId");

                    b.HasIndex("BuyerId");

                    b.ToTable("SELLERS_FAVORITES_BUYERS","dbo");
                });

            modelBuilder.Entity("EFarmerPkModelLibrary.Entities.USER", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("Address")
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("BuyerFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BuyerFlag")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("CCompanyCode")
                        .IsRequired()
                        .HasColumnName("CCompanyCode")
                        .HasColumnType("nchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CCountryCode")
                        .IsRequired()
                        .HasColumnName("CCountryCode")
                        .HasColumnType("nchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CPhone")
                        .IsRequired()
                        .HasColumnName("CPhone")
                        .HasColumnType("nchar(7)")
                        .HasMaxLength(7);

                    b.Property<short>("CityId")
                        .HasColumnName("CityId")
                        .HasColumnType("smallint");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnName("FName")
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("GLat")
                        .HasColumnName("GLat")
                        .HasColumnType("decimal(10,8)");

                    b.Property<decimal?>("GLng")
                        .HasColumnName("GLng")
                        .HasColumnType("decimal(11,8)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnName("LName")
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("SellerFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SellerFlag")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CCompanyCode", "CCountryCode", "CPhone")
                        .IsUnique()
                        .HasName("UNIQUE_CONTACT");

                    b.ToTable("USERS","dbo");
                });

            modelBuilder.Entity("EFarmerPkModelLibrary.Entities.ADVERTISEMENT", b =>
                {
                    b.HasOne("EFarmerPkModelLibrary.Entities.CITY", "City")
                        .WithMany("ADVERTISEMENTs_CityId")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFarmerPkModelLibrary.Entities.AGROITEM", "AgroItem")
                        .WithMany("ADVERTISEMENTs_ItemId")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFarmerPkModelLibrary.Entities.USER", "Seller")
                        .WithMany("PostedAdvertisements")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFarmerPkModelLibrary.Entities.AGROITEM", b =>
                {
                    b.HasOne("EFarmerPkModelLibrary.Entities.CATEGORY", "CATEGORY")
                        .WithMany("AGROITEMS")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFarmerPkModelLibrary.Entities.BUYERADDSDIFFERENTADSTOFAV", b =>
                {
                    b.HasOne("EFarmerPkModelLibrary.Entities.ADVERTISEMENT", "ADVERTISEMENT")
                        .WithMany("BUYERADDSDIFFERENTADSTOFAVs_AdId")
                        .HasForeignKey("AdId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFarmerPkModelLibrary.Entities.USER", "Buyer")
                        .WithMany("InterestedAdvertisements")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFarmerPkModelLibrary.Entities.BUYERSADDAGROITEMTOINTEREST", b =>
                {
                    b.HasOne("EFarmerPkModelLibrary.Entities.USER", "User")
                        .WithMany("InterestedAgroItems")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFarmerPkModelLibrary.Entities.AGROITEM", "AGROITEM")
                        .WithMany("BUYERSADDAGROITEMTOINTERESTs_ItemId")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFarmerPkModelLibrary.Entities.SELLERSFAVORITESBUYER", b =>
                {
                    b.HasOne("EFarmerPkModelLibrary.Entities.USER", "USER_BuyerId")
                        .WithMany("FavoriteSellers")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFarmerPkModelLibrary.Entities.USER", "USER_SellerId")
                        .WithMany("FavoriteBuyers")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFarmerPkModelLibrary.Entities.USER", b =>
                {
                    b.HasOne("EFarmerPkModelLibrary.Entities.CITY", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
